{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\WeCanCodeIT\\\\wcci\\\\default-workspace\\\\rehab-application\\\\rehab-app-front-end-user\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\WeCanCodeIT\\\\wcci\\\\default-workspace\\\\rehab-application\\\\rehab-app-front-end-user\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\WeCanCodeIT\\\\wcci\\\\default-workspace\\\\rehab-application\\\\rehab-app-front-end-user\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _inherits from \"C:\\\\Users\\\\WeCanCodeIT\\\\wcci\\\\default-workspace\\\\rehab-application\\\\rehab-app-front-end-user\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\WeCanCodeIT\\\\wcci\\\\default-workspace\\\\rehab-application\\\\rehab-app-front-end-user\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\WeCanCodeIT\\\\wcci\\\\default-workspace\\\\rehab-application\\\\rehab-app-front-end-user\\\\src\\\\components\\\\Survey\\\\AddSurvey\\\\AddSurvey.js\";\nimport React, { Component } from \"react\";\nimport QuestionList from './QuestionList';\nimport QuestionChoiceList from './QuestionChoiceList';\nimport axios from \"axios\";\n\nvar AddSurvey =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddSurvey, _Component);\n\n  function AddSurvey() {\n    var _this;\n\n    _classCallCheck(this, AddSurvey);\n\n    _this.state = {\n      questions: [],\n      questionOptions: [],\n      questionChoices: [],\n      questionChoiceIds: [],\n      addQuestionChecker: false\n    };\n    _this.updateQuestionChoiceIds = _this.updateQuestionChoiceIds.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateQuestionOptions = _this.updateQuestionOptions.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.setState = _this.setState.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _possibleConstructorReturn(_this);\n  } // state = {\n  //   questions: [],\n  //   questionOptions: [],\n  //   questionChoices: [],\n  //   questionChoiceIds: [],\n  //   addQuestionChecker: false\n  // };\n\n\n  _createClass(AddSurvey, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(\"/questions\").then(function (res) {\n        return _this2.setState({\n          questions: res.data\n        });\n      }).then(this.updateQuestionChoiceIds()).then(this.updateQuestionOptions());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"renderContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"survey\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"addSurveyTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Add Survey\"), React.createElement(\"div\", {\n        className: \"surveyName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Survey Name:\"), React.createElement(\"input\", {\n        className: \"surveyName-input\",\n        type: \"text\",\n        placeholder: \"Survey Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"questionBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, console.log(\"choiceId\" + this.state.questionChoiceIds), console.log(\"choiceId\" + this.state.questionChoices), console.log(\"options\" + this.state.questionOptions), console.log(\"questions\" + this.state.questions), React.createElement(QuestionList, {\n        questions: this.state.questions,\n        addQuestionChoice: this.addQuestionChoice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"btnContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"genericButton\",\n        onClick: function onClick() {\n          return _this3.addQuestionChoiceButton();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Add Question Choice\"))), React.createElement(QuestionChoiceList, {\n        questionChoices: this.state.questionChoices,\n        removeQuestionChoice: this.removeQuestionChoice,\n        addQuestionChecker: this.state.addQuestionChecker,\n        addQuestion: this.addQuestion,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"btnContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"genericButton\",\n        onClick: function onClick() {\n          return _this3.addSurveyButton();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Submit Survey\"))));\n    }\n  }]);\n\n  return AddSurvey;\n}(Component);\n\nexport { AddSurvey as default };","map":{"version":3,"sources":["C:\\Users\\WeCanCodeIT\\wcci\\default-workspace\\rehab-application\\rehab-app-front-end-user\\src\\components\\Survey\\AddSurvey\\AddSurvey.js"],"names":["React","Component","QuestionList","QuestionChoiceList","axios","AddSurvey","state","questions","questionOptions","questionChoices","questionChoiceIds","addQuestionChecker","updateQuestionChoiceIds","bind","updateQuestionOptions","setState","get","then","res","data","console","log","addQuestionChoice","addQuestionChoiceButton","removeQuestionChoice","addQuestion","addSurveyButton"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport QuestionList from './QuestionList';\r\nimport QuestionChoiceList from './QuestionChoiceList'\r\nimport axios from \"axios\"\r\n\r\nexport default class AddSurvey extends Component {\r\n  constructor() {\r\n    this.state = {\r\n      questions: [],\r\n      questionOptions: [],\r\n      questionChoices: [],\r\n      questionChoiceIds: [],\r\n      addQuestionChecker: false\r\n    };\r\n    this.updateQuestionChoiceIds = this.updateQuestionChoiceIds.bind(this);\r\n    this.updateQuestionOptions = this.updateQuestionOptions.bind(this);\r\n    this.setState = this.setState.bind(this);\r\n  }\r\n\r\n  // state = {\r\n  //   questions: [],\r\n  //   questionOptions: [],\r\n  //   questionChoices: [],\r\n  //   questionChoiceIds: [],\r\n  //   addQuestionChecker: false\r\n  // };\r\n\r\n  componentDidMount() {\r\n    axios.get(\"/questions\").then(res => this.setState({ questions: res.data }))\r\n    .then(this.updateQuestionChoiceIds())\r\n    .then(this.updateQuestionOptions())\r\n  }\r\n\r\n  updateQuestionChoiceIds=() => {\r\n    this.setState({questionChoiceIds: [...this.state.questionChoices.map(questionChoice => {\r\n      return questionChoice.id;\r\n    })]})\r\n  }\r\n\r\n  updateQuestionOptions = () => {\r\n    this.setState({questionOptions: this.state.questions})\r\n\r\n    // this.setState({questionOptions: [...this.state.questions.filter(question => !this.state.questionChoiceIds.includes(question.id))]})\r\n  }\r\n\r\n  addQuestionChoiceButton = () => {\r\n    let selectBox = document.querySelector(\".questionListChoice\")\r\n    let questionId = selectBox.options[selectBox.selectedIndex].value;\r\n    let questionName = selectBox.options[selectBox.selectedIndex].textContent;\r\n    this.addQuestionChoice(questionId, questionName)\r\n  }\r\n\r\n  addQuestionChoice = (id, name) => {\r\n    // this.setState({ questionChoices: [...this.state.questionChoices, {\r\n    //           id: id,\r\n    //           name: name,\r\n    //         }]\r\n    //       })\r\n    Promise.all([\r\n      // () => { id === \"add\" && this.setState({ addQuestionChecker: true }) }, \r\n      () => {this.setState({\r\n          questionChoices: [...this.state.questionChoices, {\r\n            id: id,\r\n            name: name,\r\n          }]\r\n        })\r\n        }\r\n      ]) \r\n    //   this.updateQuestionChoiceIds(), \r\n    //   this.updateQuestionOptions()]);\r\n    \r\n    // console.log(this.state.questionChoiceIds)\r\n    // console.log(this.state.questionOptions)\r\n  }\r\n\r\n  removeQuestionChoice = (specificQuestionName) => {\r\n    this.setState({\r\n      questionChoices: [...this.state.questionChoices.filter(questionChoice => questionChoice.name !== specificQuestionName)]\r\n    })\r\n    .then(this.updateQuestionChoiceIds())\r\n    .then(this.updateQuestionOptions())\r\n  }\r\n\r\n  // addQuestion = name => {\r\n  //   let newId\r\n  //   axios\r\n  //     .post(\"/questions/addQuestion\", { name})\r\n  //     .then(res => this.setState({ questions: res.data }))\r\n  //     .then(() => {axios\r\n  //     .post(\"/questions/nameToId\", { name})\r\n  //       .then(res => {newId = res.data })})\r\n  //     .then(() => {\r\n  //       console.log(newId)\r\n  //       this.setState({\r\n  //       questionChoices: [...this.state.questionChoices, {\r\n  //         id: newId,\r\n  //         name: name,\r\n  //       }],\r\n  //       addQuestionChecker: false\r\n  //      })})\r\n  // }\r\n\r\n  addSurveyButton = () => {\r\n    let name = document.querySelector(\".surveyName-input\").value\r\n    this.props.addSurvey(name, this.state.questionChoices);\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"renderContainer\">\r\n        <div className=\"survey\">\r\n          <h1 className=\"addSurveyTitle\">Add Survey</h1>\r\n          <div className=\"surveyName\">\r\n            <p>Survey Name:</p>\r\n            <input className=\"surveyName-input\" type=\"text\" placeholder=\"Survey Name\"></input>\r\n          </div>\r\n\r\n          <div className=\"questionBox\">\r\n          {console.log(\"choiceId\" + this.state.questionChoiceIds)}\r\n          {console.log(\"choiceId\" + this.state.questionChoices)}\r\n          {console.log(\"options\" + this.state.questionOptions)}\r\n          {console.log(\"questions\" + this.state.questions)}\r\n            <QuestionList questions={this.state.questions} addQuestionChoice={this.addQuestionChoice}\r\n            />\r\n            <div className=\"btnContainer\">\r\n              <button\r\n                className=\"genericButton\"\r\n                onClick={() => this.addQuestionChoiceButton()}\r\n              >Add Question Choice\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <QuestionChoiceList questionChoices={this.state.questionChoices} removeQuestionChoice={this.removeQuestionChoice} addQuestionChecker={this.state.addQuestionChecker} addQuestion = {this.addQuestion} />\r\n\r\n          <div className=\"btnContainer\">\r\n            <button\r\n              className=\"genericButton\"\r\n              onClick={() => this.addSurveyButton()}\r\n            >Submit Survey\r\n              </button>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}