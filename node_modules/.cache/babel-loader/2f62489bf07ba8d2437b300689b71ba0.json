{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\WeCanCodeIT\\\\wcci\\\\default-workspace\\\\rehab-application\\\\rehab-app-front-end-user\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\WeCanCodeIT\\\\wcci\\\\default-workspace\\\\rehab-application\\\\rehab-app-front-end-user\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\WeCanCodeIT\\\\wcci\\\\default-workspace\\\\rehab-application\\\\rehab-app-front-end-user\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\WeCanCodeIT\\\\wcci\\\\default-workspace\\\\rehab-application\\\\rehab-app-front-end-user\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\WeCanCodeIT\\\\wcci\\\\default-workspace\\\\rehab-application\\\\rehab-app-front-end-user\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\WeCanCodeIT\\\\wcci\\\\default-workspace\\\\rehab-application\\\\rehab-app-front-end-user\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\WeCanCodeIT\\\\wcci\\\\default-workspace\\\\rehab-application\\\\rehab-app-front-end-user\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\WeCanCodeIT\\\\wcci\\\\default-workspace\\\\rehab-application\\\\rehab-app-front-end-user\\\\src\\\\components\\\\Survey\\\\AddSurvey\\\\AddSurvey.js\";\nimport React, { Component } from \"react\";\nimport QuestionList from './QuestionList';\nimport QuestionChoiceList from './QuestionChoiceList';\nimport axios from \"axios\";\n\nvar AddSurvey =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddSurvey, _Component);\n\n  function AddSurvey(props) {\n    var _this;\n\n    _classCallCheck(this, AddSurvey);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddSurvey).call(this, props));\n    _this.state = {\n      questions: [],\n      questionOptions: [],\n      questionChoices: [],\n      questionChoiceIds: [],\n      addQuestionChecker: false\n    };\n\n    _this.updateQuestionChoiceIds = function () {\n      _this.setState({\n        questionChoiceIds: _toConsumableArray(_this.state.questionChoices.map(function (questionChoice) {\n          return questionChoice.id;\n        }))\n      });\n    };\n\n    _this.updateQuestionOptions = function () {\n      _this.setState({\n        questionOptions: _this.state.questions.filter(function (question) {\n          return !_this.state.questionChoiceIds.includes(question.id);\n        })\n      });\n    };\n\n    _this.addQuestionChoiceButton = function () {\n      var selectBox = document.querySelector(\".questionListChoice\");\n      var questionId = selectBox.options[selectBox.selectedIndex].value;\n      var questionName = selectBox.options[selectBox.selectedIndex].textContent;\n\n      _this.addQuestionChoice(questionId, questionName);\n    };\n\n    _this.addQuestionChoice = function (id, name) {\n      _this.setState({\n        questionChoices: [].concat(_toConsumableArray(_this.state.questionChoices), [{\n          id: id,\n          name: name\n        }])\n      }); // Promise.all([\n      //   // () => { id === \"add\" && this.setState({ addQuestionChecker: true }) }, \n      //   () => {this.setState({\n      //       questionChoices: [...this.state.questionChoices, {\n      //         id: id,\n      //         name: name,\n      //       }]\n      //     })\n      //     },\n      //   this.updateQuestionChoiceIds(), \n      //   this.updateQuestionOptions()]);\n      // console.log(this.state.questionChoiceIds)\n      // console.log(this.state.questionOptions)\n\n    };\n\n    _this.removeQuestionChoice = function (specificQuestionName) {\n      _this.setState({\n        questionChoices: _toConsumableArray(_this.state.questionChoices.filter(function (questionChoice) {\n          return questionChoice.name !== specificQuestionName;\n        }))\n      });\n    };\n\n    _this.addSurveyButton = function () {\n      var name = document.querySelector(\".surveyName-input\").value;\n\n      _this.props.addSurvey(name, _this.state.questionChoices);\n    };\n\n    _this.updateQuestionChoiceIds = _this.updateQuestionChoiceIds.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateQuestionOptions = _this.updateQuestionOptions.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.setState = _this.setState.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = _this.state.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AddSurvey, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(\"/questions\").then(function (res) {\n        return _this2.setState({\n          questions: res.data\n        });\n      }).then(function () {\n        return _this2.updateQuestionChoiceIds();\n      }).then(function () {\n        return _this2.updateQuestionOptions();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"renderContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"survey\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"addSurveyTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Add Survey\"), React.createElement(\"div\", {\n        className: \"surveyName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Survey Name:\"), React.createElement(\"input\", {\n        className: \"surveyName-input\",\n        type: \"text\",\n        placeholder: \"Survey Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"questionBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, console.log(\"choiceId \" + this.state.questionChoiceIds), console.log(\"choice \" + this.state.questionChoices), console.log(\"options \" + this.state.questionOptions), React.createElement(QuestionList, {\n        questions: this.state.questionOptions,\n        addQuestionChoice: this.addQuestionChoice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"btnContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"genericButton\",\n        onClick: function onClick() {\n          return _this3.addQuestionChoiceButton(), _this3.updateQuestionChoiceIds(), _this3.updateQuestionOptions();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Add Question Choice\"))), React.createElement(QuestionChoiceList, {\n        questionChoices: this.state.questionChoices,\n        removeQuestionChoice: this.removeQuestionChoice,\n        addQuestionChecker: this.state.addQuestionChecker,\n        addQuestion: this.addQuestion,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"btnContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"genericButton\",\n        onClick: function onClick() {\n          return _this3.addSurveyButton();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Submit Survey\"))));\n    }\n  }]);\n\n  return AddSurvey;\n}(Component);\n\nexport { AddSurvey as default };","map":{"version":3,"sources":["C:\\Users\\WeCanCodeIT\\wcci\\default-workspace\\rehab-application\\rehab-app-front-end-user\\src\\components\\Survey\\AddSurvey\\AddSurvey.js"],"names":["React","Component","QuestionList","QuestionChoiceList","axios","AddSurvey","props","state","questions","questionOptions","questionChoices","questionChoiceIds","addQuestionChecker","updateQuestionChoiceIds","setState","map","questionChoice","id","updateQuestionOptions","filter","question","includes","addQuestionChoiceButton","selectBox","document","querySelector","questionId","options","selectedIndex","value","questionName","textContent","addQuestionChoice","name","removeQuestionChoice","specificQuestionName","addSurveyButton","addSurvey","bind","get","then","res","data","console","log","addQuestion"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport QuestionList from './QuestionList';\r\nimport QuestionChoiceList from './QuestionChoiceList'\r\nimport axios from \"axios\"\r\n\r\nexport default class AddSurvey extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateQuestionChoiceIds = this.updateQuestionChoiceIds.bind(this);\r\n    this.updateQuestionOptions = this.updateQuestionOptions.bind(this);\r\n    this.setState = this.setState.bind(this);\r\n    this.state = this.state.bind(this);\r\n  }\r\n\r\n  state = {\r\n    questions: [],\r\n    questionOptions: [],\r\n    questionChoices: [],\r\n    questionChoiceIds: [],\r\n    addQuestionChecker: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios.get(\"/questions\").then(res => this.setState({ questions: res.data }))\r\n    .then(() => this.updateQuestionChoiceIds())\r\n    .then(() => this.updateQuestionOptions())\r\n  }\r\n\r\n  updateQuestionChoiceIds = () => {\r\n    this.setState({questionChoiceIds: [...this.state.questionChoices.map(questionChoice => {\r\n      return questionChoice.id;\r\n    })]})\r\n  }\r\n\r\n  updateQuestionOptions = () => {\r\n    this.setState({questionOptions: this.state.questions.filter(question => !this.state.questionChoiceIds.includes(question.id))})\r\n  }\r\n\r\n  addQuestionChoiceButton = () => {\r\n    let selectBox = document.querySelector(\".questionListChoice\")\r\n    let questionId = selectBox.options[selectBox.selectedIndex].value;\r\n    let questionName = selectBox.options[selectBox.selectedIndex].textContent;\r\n    this.addQuestionChoice(questionId, questionName)\r\n  }\r\n\r\n  addQuestionChoice = (id, name) => {\r\n    this.setState({ questionChoices: [...this.state.questionChoices, {\r\n        id: id,\r\n        name: name,\r\n      }]\r\n    })\r\n    // Promise.all([\r\n    //   // () => { id === \"add\" && this.setState({ addQuestionChecker: true }) }, \r\n    //   () => {this.setState({\r\n    //       questionChoices: [...this.state.questionChoices, {\r\n    //         id: id,\r\n    //         name: name,\r\n    //       }]\r\n    //     })\r\n    //     },\r\n    //   this.updateQuestionChoiceIds(), \r\n    //   this.updateQuestionOptions()]);\r\n    \r\n    // console.log(this.state.questionChoiceIds)\r\n    // console.log(this.state.questionOptions)\r\n  }\r\n\r\n  removeQuestionChoice = (specificQuestionName) => {\r\n    this.setState({\r\n      questionChoices: [...this.state.questionChoices.filter(questionChoice => questionChoice.name !== specificQuestionName)]\r\n    })\r\n  }\r\n\r\n  // addQuestion = name => {\r\n  //   let newId\r\n  //   axios\r\n  //     .post(\"/questions/addQuestion\", { name})\r\n  //     .then(res => this.setState({ questions: res.data }))\r\n  //     .then(() => {axios\r\n  //     .post(\"/questions/nameToId\", { name})\r\n  //       .then(res => {newId = res.data })})\r\n  //     .then(() => {\r\n  //       console.log(newId)\r\n  //       this.setState({\r\n  //       questionChoices: [...this.state.questionChoices, {\r\n  //         id: newId,\r\n  //         name: name,\r\n  //       }],\r\n  //       addQuestionChecker: false\r\n  //      })})\r\n  // }\r\n\r\n  addSurveyButton = () => {\r\n    let name = document.querySelector(\".surveyName-input\").value\r\n    this.props.addSurvey(name, this.state.questionChoices);\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"renderContainer\">\r\n        <div className=\"survey\">\r\n          <h1 className=\"addSurveyTitle\">Add Survey</h1>\r\n          <div className=\"surveyName\">\r\n            <p>Survey Name:</p>\r\n            <input className=\"surveyName-input\" type=\"text\" placeholder=\"Survey Name\"></input>\r\n          </div>\r\n\r\n          <div className=\"questionBox\">\r\n          {console.log(\"choiceId \" + this.state.questionChoiceIds)}\r\n          {console.log(\"choice \" + this.state.questionChoices)}\r\n          {console.log(\"options \" + this.state.questionOptions)}\r\n            <QuestionList questions={this.state.questionOptions} addQuestionChoice={this.addQuestionChoice}\r\n            />\r\n            <div className=\"btnContainer\">\r\n              <button\r\n                className=\"genericButton\"\r\n                onClick={() => (this.addQuestionChoiceButton(), this.updateQuestionChoiceIds(), this.updateQuestionOptions())}\r\n              >Add Question Choice\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <QuestionChoiceList questionChoices={this.state.questionChoices} removeQuestionChoice={this.removeQuestionChoice} addQuestionChecker={this.state.addQuestionChecker} addQuestion = {this.addQuestion} />\r\n\r\n          <div className=\"btnContainer\">\r\n            <button\r\n              className=\"genericButton\"\r\n              onClick={() => this.addSurveyButton()}\r\n            >Submit Survey\r\n              </button>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}